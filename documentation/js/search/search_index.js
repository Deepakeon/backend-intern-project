var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.857,1,1.392]],["body/modules/AppModule.html",[0,1.353,1,2.602,2,1.062,3,1.062,4,1.469,5,1.469,6,1.062,7,1.955,8,1.469,9,2.118,10,2.118,11,2.131,12,0.062,13,2.131,14,1.955,15,1.469,16,1.469,17,0.643,18,0.532,19,0.532,20,2.682,21,3.571,22,0.962,23,0.904,24,0.904,25,1.247,26,2.682,27,2.682,28,1.746,29,0.643,30,0.176,31,0.044,32,0.044]],["title/classes/GetWeatherSyncFilterDto.html",[30,0.167,33,1.182]],["body/classes/GetWeatherSyncFilterDto.html",[12,0.061,17,0.479,18,0.397,19,0.397,22,0.822,24,1.408,29,0.479,30,0.225,31,0.036,32,0.036,33,1.352,34,1.094,35,1.408,36,2.719,37,2.287,38,1.578,39,0.674,40,1.352,41,1.877,42,2.232,43,2.287,44,2.232,45,2.232,46,1.542,47,2.566,48,2.191,49,3.766,50,1.585,51,1.998,52,1.998,53,1.998,54,1.998,55,1.998,56,1.998,57,0.791,58,1.301,59,1.301,60,3.16,61,4.177,62,1.094,63,1.301]],["title/modules/PrismaModule.html",[0,0.857,11,1.182]],["body/modules/PrismaModule.html",[0,1.376,2,1.099,3,1.099,4,1.519,5,1.519,6,1.099,7,2.235,8,2.235,11,2.193,12,0.06,14,1.999,15,1.519,16,1.519,17,0.665,18,0.551,19,0.551,22,0.875,23,0.935,29,0.665,30,0.182,31,0.045,32,0.045,64,2.191,65,2.191,66,2.191,67,1.964,68,2.775,69,3.652,70,2.775]],["title/injectables/PrismaService.html",[67,1.007,71,1.182]],["body/injectables/PrismaService.html",[12,0.062,17,0.726,18,0.601,19,0.601,22,0.926,23,1.021,29,0.726,30,0.198,31,0.048,32,0.048,50,1.199,57,1.199,67,1.531,71,1.796,72,1.971,73,2.391,74,3.865,75,4.257,76,3.361,77,3.028,78,3.028,79,3.028,80,3.028,81,3.028,82,3.028]],["title/controllers/WeatherSyncController.html",[83,1.392,84,1.392]],["body/controllers/WeatherSyncController.html",[12,0.062,17,0.484,18,0.401,19,0.401,22,0.907,23,0.681,24,0.988,25,1.759,28,1.315,29,0.484,30,0.132,31,0.036,32,0.036,33,1.759,35,1.276,37,1.605,39,0.681,46,1.163,48,1.889,50,1.366,83,1.106,84,1.605,85,1.595,86,2.02,87,2.314,88,2.931,89,2.314,90,2.314,91,2.02,92,1.759,93,2.931,94,2.02,95,2.246,96,2.246,97,2.246,98,2.989,99,2.724,100,2.02,101,1.759,102,2.02,103,2.02,104,2.931,105,1.595,106,2.02,107,2.314,108,2.02,109,2.02,110,2.02,111,2.02,112,2.02,113,1.366,114,1.595,115,2.02,116,1.595,117,2.02,118,2.724,119,2.02,120,2.02,121,2.02,122,2.02,123,2.02,124,2.02,125,2.02]],["title/classes/WeatherSyncDeltaParamsDto.html",[30,0.167,101,1.182]],["body/classes/WeatherSyncDeltaParamsDto.html",[12,0.061,17,0.556,18,0.46,19,0.46,22,0.966,24,1.358,29,0.556,30,0.244,31,0.04,32,0.04,34,1.269,35,1.358,36,2.622,37,2.205,39,0.782,40,1.503,41,2.038,43,2.319,46,1.428,47,2.038,48,2.038,50,1.474,57,0.918,58,1.509,59,1.509,62,1.269,63,2.424,101,1.503,126,1.831,127,2.94,128,2.94,129,2.319,130,2.319,131,2.319,132,2.319,133,2.319,134,2.553,135,1.831,136,1.831,137,1.509,138,2.319,139,2.319,140,1.831,141,1.831]],["title/classes/WeatherSyncDto.html",[30,0.167,92,1.182]],["body/classes/WeatherSyncDto.html",[12,0.061,17,0.51,18,0.422,19,0.422,22,0.729,29,0.51,30,0.199,31,0.037,32,0.037,34,1.164,35,1.438,39,0.717,40,1.414,41,1.944,42,2.312,43,2.336,44,2.312,45,2.312,46,1.382,47,2.459,48,2.245,50,1.624,57,0.842,59,1.384,60,3.06,62,1.164,63,1.98,92,1.414,134,2.402,135,1.679,136,1.679,140,1.679,141,1.679,142,3.368,143,1.679,144,2.126,145,2.126,146,3.551,147,2.126,148,2.126,149,2.126,150,3.238,151,2.126,152,2.126,153,3.551,154,2.126,155,2.126]],["title/modules/WeatherSyncModule.html",[0,0.857,13,1.182]],["body/modules/WeatherSyncModule.html",[0,1.376,2,1.099,3,1.099,4,1.519,5,1.519,6,1.099,7,2.235,8,1.519,12,0.061,13,2.151,14,1.999,15,1.519,16,1.519,17,0.665,18,0.551,19,0.551,22,0.979,23,0.935,24,1.231,25,1.29,28,2.378,29,0.665,30,0.182,31,0.045,32,0.045,35,0.935,84,2.235,113,1.833,114,2.191,156,2.191,157,2.191,158,2.775,159,2.775]],["title/injectables/WeatherSyncService.html",[71,1.182,113,1.007]],["body/injectables/WeatherSyncService.html",[12,0.063,17,0.258,18,0.214,19,0.214,22,0.714,23,0.363,24,0.604,25,1.585,29,0.258,30,0.07,31,0.022,32,0.022,33,1.247,35,1.149,39,0.363,41,1.469,42,1.166,43,1.26,44,1.166,45,1.166,46,1.084,47,2.241,50,1.274,57,0.426,67,1.062,71,0.833,72,0.7,76,0.85,87,1.414,89,1.414,90,1.414,92,1.247,95,2.094,96,2.094,97,2.094,98,2.118,99,2.352,101,1.247,105,1.414,107,1.414,113,0.709,116,0.85,118,2.352,127,2.352,128,2.82,160,0.85,161,3.708,162,1.791,163,1.791,164,1.791,165,1.076,166,1.076,167,1.414,168,1.791,169,1.076,170,2.301,171,1.791,172,3.708,173,3.708,174,1.076,175,3.216,176,1.791,177,2.54,178,3.216,179,2.683,180,1.076,181,1.791,182,1.076,183,1.791,184,1.076,185,1.076,186,1.076,187,1.076,188,2.928,189,1.076,190,1.076,191,1.076,192,1.791,193,1.791,194,1.791,195,1.791,196,1.791,197,1.791,198,1.791,199,1.791,200,1.791,201,1.791,202,3.41,203,3.216,204,2.301,205,1.076,206,1.076,207,1.791,208,1.076,209,0.85,210,1.076,211,1.076,212,1.076,213,1.791,214,1.076,215,1.076]],["title/coverage.html",[216,2.243]],["body/coverage.html",[6,1.033,12,0.059,19,0.518,24,1.181,25,1.629,30,0.259,31,0.043,32,0.043,33,1.212,35,1.488,36,2.282,37,1.919,38,2.059,46,0.879,67,1.033,71,1.629,73,2.059,83,1.428,84,1.428,85,2.059,92,1.212,101,1.212,113,1.033,126,2.059,137,1.698,142,2.059,143,2.059,160,2.059,188,3.729,209,2.059,216,1.698,217,2.608,218,2.608,219,2.608,220,2.059,221,2.059,222,2.059,223,3.505,224,3.505,225,2.059,226,2.608,227,3.505,228,3.505,229,2.608,230,2.608,231,2.608]],["title/dependencies.html",[3,1.209,232,1.687]],["body/dependencies.html",[3,1.246,12,0.062,23,1.06,30,0.259,31,0.049,32,0.049,57,1.246,58,2.048,62,1.722,167,2.484,233,4.333,234,3.146,235,3.146,236,3.146,237,3.96,238,3.146,239,3.146,240,3.146,241,3.146,242,3.146,243,3.146,244,3.146,245,3.146,246,3.146,247,3.146]],["title/miscellaneous/functions.html",[248,1.687,249,2.41]],["body/miscellaneous/functions.html",[6,1.743,12,0.054,31,0.05,32,0.05,39,1.097,46,1.097,95,2.119,96,2.119,97,2.119,137,2.633,177,3.194,220,2.57,221,3.194,222,3.194,225,2.57,248,2.57,249,2.57,250,3.255,251,3.255,252,3.255,253,4.604,254,3.255,255,3.255]],["title/index.html",[39,0.72,256,2.136,257,2.136]],["body/index.html",[12,0.061,18,0.476,31,0.041,32,0.041,216,1.561,258,2.397,259,2.397,260,3.309,261,2.397,262,2.397,263,2.397,264,2.397,265,2.397,266,2.397,267,1.893,268,3.79,269,2.397,270,2.397,271,2.397,272,2.397,273,4.544,274,2.397,275,2.397,276,2.397,277,4.434,278,2.397,279,2.397,280,3.309,281,2.397,282,2.397,283,2.397,284,2.397,285,3.309,286,3.309,287,2.397,288,2.397,289,2.397,290,3.309,291,3.309,292,2.397,293,2.397,294,2.397,295,2.397,296,2.397,297,1.893,298,2.397,299,2.397,300,2.397,301,2.397,302,2.397,303,2.397,304,2.397,305,2.397,306,2.397,307,2.397,308,1.893,309,2.397,310,2.397,311,2.397,312,2.397,313,2.397,314,2.397,315,1.893]],["title/modules.html",[2,1.365]],["body/modules.html",[1,1.939,2,1.402,11,1.646,12,0.052,13,1.646,31,0.052,32,0.052,297,3.606,316,4.567,317,4.567,318,4.567]],["title/overview.html",[319,2.721]],["body/overview.html",[0,0.94,1,2.537,2,1.104,3,1.104,4,1.527,5,1.527,6,1.104,7,1.527,8,1.527,9,2.202,10,2.202,11,2.154,12,0.058,13,2.098,14,2.006,15,1.527,16,1.527,31,0.045,32,0.045,34,1.527,64,2.202,65,2.202,66,2.202,67,1.871,72,1.815,83,1.527,113,1.621,150,2.202,156,2.202,157,2.202,319,2.202,320,3.664,321,2.788]],["title/properties.html",[40,1.419,232,1.687]],["body/properties.html",[12,0.061,31,0.053,32,0.053,40,1.699,267,2.887,308,2.887,315,2.887,322,3.656,323,3.656,324,3.656]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":188,"title":{},"body":{"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":323,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":321,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":150,"title":{},"body":{"classes/WeatherSyncDto.html":{},"overview.html":{}}}],["2})@min(0)@max(100",{"_index":147,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["3",{"_index":320,"title":{},"body":{"overview.html":{}}}],["5.3.1",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":162,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["add(dto",{"_index":168,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["addweathersync",{"_index":88,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["addweathersync(@body",{"_index":117,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["addweathersync(dto",{"_index":91,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["amazing",{"_index":298,"title":{},"body":{"index.html":{}}}],["app",{"_index":275,"title":{},"body":{"index.html":{}}}],["applications",{"_index":266,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["areacode",{"_index":41,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["author",{"_index":308,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":204,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["backers",{"_index":299,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":185,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["badrequestexception('no",{"_index":210,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["body",{"_index":108,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":318,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":316,"title":{},"body":{"modules.html":{}}}],["building",{"_index":261,"title":{},"body":{"index.html":{}}}],["calculateclimatechangeindex",{"_index":163,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["calculateclimatechangeindex(temperaturedelta",{"_index":171,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["calculateweathersyncdelta",{"_index":164,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["calculateweathersyncdelta(fromclimate",{"_index":176,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["chancesofrain",{"_index":42,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["chancesofraindelta",{"_index":173,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["chancesofrainsum",{"_index":190,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["chancesofrainsum[0",{"_index":197,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["chancesofrainsum[1",{"_index":201,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["class",{"_index":30,"title":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":34,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"overview.html":{}}}],["cli",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["climate",{"_index":43,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["climatechangeindex",{"_index":213,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["climatedelta",{"_index":215,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":64,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":66,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":65,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_weathersyncmodule",{"_index":156,"title":{},"body":{"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["cluster_weathersyncmodule_providers",{"_index":157,"title":{},"body":{"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["const",{"_index":203,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/WeatherSyncService.html":{}}}],["constructor(prisma",{"_index":165,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["constructor(private",{"_index":116,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["controller",{"_index":83,"title":{"controllers/WeatherSyncController.html":{}},"body":{"controllers/WeatherSyncController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('weather",{"_index":115,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["controllers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{}}}],["coverage",{"_index":216,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["data",{"_index":206,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["datasources",{"_index":79,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":80,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["decorators",{"_index":48,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["defined",{"_index":50,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["delta.dto.ts",{"_index":126,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"coverage.html":{}}}],["delta.dto.ts:13",{"_index":133,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["delta.dto.ts:19",{"_index":130,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["delta.dto.ts:9",{"_index":131,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":267,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":276,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":98,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["e2e",{"_index":287,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":262,"title":{},"body":{"index.html":{}}}],["equals",{"_index":221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["express",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":74,"title":{},"body":{"injectables/PrismaService.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["filter.dto.ts",{"_index":38,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:13",{"_index":54,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["filter.dto.ts:18",{"_index":56,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["filter.dto.ts:23",{"_index":55,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["filter.dto.ts:28",{"_index":52,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["filter.dto.ts:9",{"_index":51,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["filterdto",{"_index":107,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["found",{"_index":211,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["framework",{"_index":260,"title":{},"body":{"index.html":{}}}],["fromclimate",{"_index":127,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"injectables/WeatherSyncService.html":{}}}],["function",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":249,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('delta",{"_index":122,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["get('delta')@httpcode(httpstatus.ok",{"_index":102,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["getting",{"_index":256,"title":{"index.html":{}},"body":{}}],["getweathersyncdelta",{"_index":89,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["getweathersyncdelta(@body",{"_index":124,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["getweathersyncdelta(weathersyncdeltaparams",{"_index":100,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["getweathersyncdelta(weathersyncparams",{"_index":181,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["getweathersyncfilterdto",{"_index":33,"title":{"classes/GetWeatherSyncFilterDto.html":{}},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["getweathersyncrecords",{"_index":90,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["getweathersyncrecords(@query",{"_index":120,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["getweathersyncrecords(filterdto",{"_index":105,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["global",{"_index":69,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":294,"title":{},"body":{"index.html":{}}}],["here",{"_index":305,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":109,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["httpcode(httpstatus.ok",{"_index":123,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["https://nestjs.com",{"_index":312,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["humidity",{"_index":44,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["humiditydelta",{"_index":172,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["humiditysum",{"_index":189,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["humiditysum[0",{"_index":195,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["humiditysum[1",{"_index":200,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["identifier",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{}}}],["injectable",{"_index":71,"title":{"injectables/PrismaService.html":{},"injectables/WeatherSyncService.html":{}},"body":{"injectables/PrismaService.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["injectables",{"_index":72,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/WeatherSyncService.html":{},"overview.html":{}}}],["installation",{"_index":272,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":274,"title":{},"body":{"index.html":{}}}],["isenum",{"_index":59,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["isenum(climate",{"_index":63,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["isenum(climate)@isnotequalsto('fromclimate",{"_index":132,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["isenum(climate)@isoptional",{"_index":53,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["isint",{"_index":134,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["isint()@min(100)@max(1000",{"_index":144,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["isnotequalsto",{"_index":137,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotequalsto('fromclimate",{"_index":139,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["isnotequalsto(property",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnumber",{"_index":60,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":146,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["isoptional",{"_index":61,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["join",{"_index":301,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":309,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["license",{"_index":315,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":291,"title":{},"body":{"index.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["max",{"_index":135,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["max(100",{"_index":155,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["max(1000",{"_index":141,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["maxdecimalplaces",{"_index":153,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["metadata",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":87,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["min",{"_index":136,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["min(0",{"_index":154,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["min(100",{"_index":140,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{}}}],["miscellaneous",{"_index":248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":290,"title":{},"body":{"index.html":{}}}],["mode",{"_index":280,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":304,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":310,"title":{},"body":{"index.html":{}}}],["name",{"_index":96,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":268,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":314,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":209,"title":{},"body":{"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["node.js",{"_index":259,"title":{},"body":{"index.html":{}}}],["npm",{"_index":273,"title":{},"body":{"index.html":{}}}],["number",{"_index":47,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["open",{"_index":292,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["overview",{"_index":319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":232,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":95,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{},"miscellaneous/functions.html":{}}}],["please",{"_index":302,"title":{},"body":{"index.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["post('add",{"_index":93,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["prefix",{"_index":86,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["prisma",{"_index":167,"title":{},"body":{"injectables/WeatherSyncService.html":{},"dependencies.html":{}}}],["prisma.service",{"_index":70,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":57,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"injectables/PrismaService.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":75,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":11,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":67,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"overview.html":{}}}],["process.env.database_url",{"_index":82,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":282,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":258,"title":{},"body":{"index.html":{}}}],["project",{"_index":293,"title":{},"body":{"index.html":{}}}],["properties",{"_index":40,"title":{"properties.html":{}},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"properties.html":{}}}],["property",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["query",{"_index":112,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["read",{"_index":303,"title":{},"body":{"index.html":{}}}],["record.chancesofrain",{"_index":198,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["record.climate",{"_index":192,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["record.humidity",{"_index":196,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["record.temperature",{"_index":194,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["records",{"_index":178,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["records.foreach(record",{"_index":191,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["records.length",{"_index":202,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["reflect",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":271,"title":{},"body":{"index.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":118,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["returns",{"_index":99,"title":{},"body":{"controllers/WeatherSyncController.html":{},"injectables/WeatherSyncService.html":{}}}],["run",{"_index":277,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":263,"title":{},"body":{"index.html":{}}}],["server",{"_index":264,"title":{},"body":{"index.html":{}}}],["side",{"_index":265,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"index.html":{}}}],["sponsors",{"_index":296,"title":{},"body":{"index.html":{}}}],["src/.../is",{"_index":251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/validators",{"_index":138,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["src/common/validators/is",{"_index":220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":68,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":186,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":73,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:5",{"_index":77,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/weather",{"_index":35,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["start",{"_index":278,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":281,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":283,"title":{},"body":{"index.html":{}}}],["started",{"_index":257,"title":{"index.html":{}},"body":{}}],["starter",{"_index":270,"title":{},"body":{"index.html":{}}}],["statements",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":306,"title":{},"body":{"index.html":{}}}],["string",{"_index":177,"title":{},"body":{"injectables/WeatherSyncService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":78,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":297,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":317,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":37,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"coverage.html":{}}}],["sync.controller",{"_index":159,"title":{},"body":{"modules/WeatherSyncModule.html":{}}}],["sync.controller.ts",{"_index":85,"title":{},"body":{"controllers/WeatherSyncController.html":{},"coverage.html":{}}}],["sync.controller.ts:13",{"_index":94,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["sync.controller.ts:18",{"_index":106,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["sync.controller.ts:24",{"_index":103,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["sync.dto.ts",{"_index":143,"title":{},"body":{"classes/WeatherSyncDto.html":{},"coverage.html":{}}}],["sync.dto.ts:12",{"_index":145,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["sync.dto.ts:15",{"_index":152,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["sync.dto.ts:18",{"_index":151,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["sync.dto.ts:23",{"_index":148,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["sync.dto.ts:7",{"_index":149,"title":{},"body":{"classes/WeatherSyncDto.html":{}}}],["sync.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["sync.module.ts",{"_index":158,"title":{},"body":{"modules/WeatherSyncModule.html":{}}}],["sync.service",{"_index":114,"title":{},"body":{"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{}}}],["sync.service.ts",{"_index":160,"title":{},"body":{"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["sync.service.ts:12",{"_index":174,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync.service.ts:16",{"_index":180,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync.service.ts:38",{"_index":169,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync.service.ts:46",{"_index":184,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync.service.ts:59",{"_index":182,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync.service.ts:9",{"_index":166,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["sync/dto/get",{"_index":36,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"coverage.html":{}}}],["sync/dto/weather",{"_index":142,"title":{},"body":{"classes/WeatherSyncDto.html":{},"coverage.html":{}}}],["sync/weather",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["table",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["temperature",{"_index":45,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{}}}],["temperaturedelta",{"_index":175,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["temperaturesum",{"_index":187,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["temperaturesum[0",{"_index":193,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["temperaturesum[1",{"_index":199,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["test",{"_index":286,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":289,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":288,"title":{},"body":{"index.html":{}}}],["tests",{"_index":285,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":295,"title":{},"body":{"index.html":{}}}],["this.calculateclimatechangeindex(temperaturedelta",{"_index":214,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["this.calculateweathersyncdelta(fromclimate",{"_index":212,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["this.prisma.weathersync.create",{"_index":205,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["this.prisma.weathersync.findmany",{"_index":207,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["this.weathersyncservice.add(dto",{"_index":119,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["this.weathersyncservice.getweathersyncdelta(weathersyncdeltaparams",{"_index":125,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["this.weathersyncservice.getweathersyncrecords(filterdto",{"_index":121,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["throw",{"_index":208,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["to.validator.ts",{"_index":222,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toclimate",{"_index":128,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{},"injectables/WeatherSyncService.html":{}}}],["touch",{"_index":307,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":58,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"dependencies.html":{}}}],["twitter",{"_index":313,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["type(undefined)@isint()@min(100)@max(1000",{"_index":129,"title":{},"body":{"classes/WeatherSyncDeltaParamsDto.html":{}}}],["type(undefined)@isnumber()@isoptional",{"_index":49,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{}}}],["typescript",{"_index":269,"title":{},"body":{"index.html":{}}}],["unit",{"_index":284,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":170,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["unlicensed",{"_index":324,"title":{},"body":{"properties.html":{}}}],["url",{"_index":81,"title":{},"body":{"injectables/PrismaService.html":{}}}],["validationoptions",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":62,"title":{},"body":{"classes/GetWeatherSyncFilterDto.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"classes/WeatherSyncDto.html":{},"dependencies.html":{}}}],["version",{"_index":322,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":279,"title":{},"body":{"index.html":{}}}],["weather",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/GetWeatherSyncFilterDto.html":{},"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["weathersync",{"_index":179,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["weathersynccontroller",{"_index":84,"title":{"controllers/WeatherSyncController.html":{}},"body":{"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{},"coverage.html":{}}}],["weathersyncdeltaparams",{"_index":104,"title":{},"body":{"controllers/WeatherSyncController.html":{}}}],["weathersyncdeltaparamsdto",{"_index":101,"title":{"classes/WeatherSyncDeltaParamsDto.html":{}},"body":{"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDeltaParamsDto.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["weathersyncdto",{"_index":92,"title":{"classes/WeatherSyncDto.html":{}},"body":{"controllers/WeatherSyncController.html":{},"classes/WeatherSyncDto.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{}}}],["weathersyncmodule",{"_index":13,"title":{"modules/WeatherSyncModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherSyncModule.html":{},"modules.html":{},"overview.html":{}}}],["weathersyncparams",{"_index":183,"title":{},"body":{"injectables/WeatherSyncService.html":{}}}],["weathersyncservice",{"_index":113,"title":{"injectables/WeatherSyncService.html":{}},"body":{"controllers/WeatherSyncController.html":{},"modules/WeatherSyncModule.html":{},"injectables/WeatherSyncService.html":{},"coverage.html":{},"overview.html":{}}}],["website",{"_index":311,"title":{},"body":{"index.html":{}}}],["yes",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":300,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules/WeatherSyncModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nWeatherSyncModule\n\nWeatherSyncModule\n\nAppModule -->\n\nWeatherSyncModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            WeatherSyncModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WeatherSyncModule } from './weather-sync/weather-sync.module';\nimport { PrismaModule } from './prisma/prisma.module';\n\n@Module({\n  imports: [WeatherSyncModule, PrismaModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetWeatherSyncFilterDto.html":{"url":"classes/GetWeatherSyncFilterDto.html","title":"class - GetWeatherSyncFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetWeatherSyncFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather-sync/dto/get-weather-sync-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                areaCode\n                            \n                            \n                                    \n                                    \n                                    \n                                chancesOfRain\n                            \n                            \n                                    \n                                    \n                                climate\n                            \n                            \n                                    \n                                    \n                                    \n                                humidity\n                            \n                            \n                                    \n                                    \n                                    \n                                temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        areaCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-filter.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        chancesOfRain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-filter.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        climate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Climate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Climate)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-filter.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        humidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-filter.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-filter.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Climate } from \"@prisma/client\"\nimport { Type } from \"class-transformer\"\nimport { IsEnum, IsNumber, IsOptional } from \"class-validator\"\n\nexport class GetWeatherSyncFilterDto {\n    @Type(() => Number)\n    @IsNumber()\n    @IsOptional()\n    areaCode: number\n\n    @IsEnum(Climate)\n    @IsOptional()\n    climate: Climate\n\n    @Type(() => Number)\n    @IsNumber()\n    @IsOptional()\n    temperature: number\n\n    @Type(() => Number)\n    @IsNumber()\n    @IsOptional()\n    humidity: number\n\n    @Type(() => Number)\n    @IsNumber()\n    @IsOptional()\n    chancesOfRain: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n    constructor() {\n        super({\n            datasources: {\n                db: {\n                    url: process.env.DATABASE_URL,\n                }\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WeatherSyncController.html":{"url":"controllers/WeatherSyncController.html","title":"controller - WeatherSyncController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WeatherSyncController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather-sync/weather-sync.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                weather-sync\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addWeatherSync\n                            \n                            \n                                    \n                                    \n                                getWeatherSyncDelta\n                            \n                            \n                                    \n                                getWeatherSyncRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addWeatherSync\n                        \n                    \n                \n            \n            \n                \n                    \n                    addWeatherSync(dto: WeatherSyncDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/weather-sync/weather-sync.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                WeatherSyncDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getWeatherSyncDelta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherSyncDelta(weatherSyncDeltaParams: WeatherSyncDeltaParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('delta')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/weather-sync/weather-sync.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weatherSyncDeltaParams\n                                    \n                                                WeatherSyncDeltaParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getWeatherSyncRecords\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherSyncRecords(filterDto: GetWeatherSyncFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/weather-sync/weather-sync.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetWeatherSyncFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, Query } from '@nestjs/common';\n\nimport { WeatherSyncService } from './weather-sync.service';\nimport { GetWeatherSyncFilterDto, WeatherSyncDto } from './dto';\nimport { WeatherSyncDeltaParamsDto } from './dto';\n\n@Controller('weather-sync')\nexport class WeatherSyncController {\n\n    constructor(private weatherSyncService: WeatherSyncService) { }\n\n    @Post('add')\n    addWeatherSync(@Body() dto: WeatherSyncDto) {\n        return this.weatherSyncService.add(dto)\n    }\n\n    @Get()\n    getWeatherSyncRecords(@Query() filterDto: GetWeatherSyncFilterDto) {\n        return this.weatherSyncService.getWeatherSyncRecords(filterDto)\n    }\n\n    @Get('delta')\n    @HttpCode(HttpStatus.OK)\n    getWeatherSyncDelta(@Body() weatherSyncDeltaParams: WeatherSyncDeltaParamsDto) {\n        return this.weatherSyncService.getWeatherSyncDelta(weatherSyncDeltaParams)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherSyncDeltaParamsDto.html":{"url":"classes/WeatherSyncDeltaParamsDto.html","title":"class - WeatherSyncDeltaParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherSyncDeltaParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather-sync/dto/get-weather-sync-delta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                areaCode\n                            \n                            \n                                    \n                                fromClimate\n                            \n                            \n                                    \n                                    \n                                toClimate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        areaCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsInt()@Min(100)@Max(1000)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-delta.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fromClimate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Climate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Climate)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-delta.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        toClimate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Climate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Climate)@IsNotEqualsTo('fromClimate')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/get-weather-sync-delta.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Climate } from \"@prisma/client\";\nimport { Type } from \"class-transformer\";\nimport { IsEnum, IsInt, Max, Min } from \"class-validator\";\n\nimport { IsNotEqualsTo } from \"src/common/validators\";\n\nexport class WeatherSyncDeltaParamsDto {\n    @IsEnum(Climate)\n    fromClimate: Climate\n\n    @IsEnum(Climate)\n    @IsNotEqualsTo('fromClimate')\n    toClimate: Climate\n\n    @Type(() => Number)\n    @IsInt()\n    @Min(100)\n    @Max(1000)\n    areaCode: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherSyncDto.html":{"url":"classes/WeatherSyncDto.html","title":"class - WeatherSyncDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherSyncDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather-sync/dto/weather-sync.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                areaCode\n                            \n                            \n                                    \n                                    \n                                    \n                                chancesOfRain\n                            \n                            \n                                    \n                                climate\n                            \n                            \n                                    \n                                humidity\n                            \n                            \n                                    \n                                temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        areaCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(100)@Max(1000)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/weather-sync.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        chancesOfRain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@Min(0)@Max(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/weather-sync.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        climate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Climate\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Climate)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/weather-sync.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        humidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/weather-sync.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather-sync/dto/weather-sync.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Climate } from \"@prisma/client\"\nimport { IsEnum, IsInt, IsNumber, Max, Min } from \"class-validator\"\n\nexport class WeatherSyncDto {\n\n    @IsEnum(Climate)\n    climate: Climate\n\n    @IsInt()\n    @Min(100)\n    @Max(1000)\n    areaCode: number\n\n    @IsNumber({ maxDecimalPlaces: 2 })\n    temperature: number\n\n    @IsNumber({ maxDecimalPlaces: 2 })\n    humidity: number\n\n    @IsNumber({ maxDecimalPlaces: 2 })\n    @Min(0)\n    @Max(100)\n    chancesOfRain: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherSyncModule.html":{"url":"modules/WeatherSyncModule.html","title":"module - WeatherSyncModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherSyncModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherSyncModule\n\n\n\ncluster_WeatherSyncModule_providers\n\n\n\n\nWeatherSyncService\n\nWeatherSyncService\n\n\n\nWeatherSyncModule\n\nWeatherSyncModule\n\nWeatherSyncModule -->\n\nWeatherSyncService->WeatherSyncModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/weather-sync/weather-sync.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WeatherSyncService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WeatherSyncController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { WeatherSyncController } from './weather-sync.controller';\nimport { WeatherSyncService } from './weather-sync.service';\n\n@Module({\n  controllers: [WeatherSyncController],\n  providers: [WeatherSyncService]\n})\nexport class WeatherSyncModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherSyncService.html":{"url":"injectables/WeatherSyncService.html","title":"injectable - WeatherSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WeatherSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather-sync/weather-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                calculateClimateChangeIndex\n                            \n                            \n                                calculateWeatherSyncDelta\n                            \n                            \n                                    Async\n                                getWeatherSyncDelta\n                            \n                            \n                                    Async\n                                getWeatherSyncRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/weather-sync/weather-sync.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(dto: WeatherSyncDto)\n                \n            \n\n\n            \n                \n                    Defined in src/weather-sync/weather-sync.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                WeatherSyncDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateClimateChangeIndex\n                        \n                    \n                \n            \n            \n                \ncalculateClimateChangeIndex(temperatureDelta: number, humidityDelta: number, chancesOfRainDelta: number)\n                \n            \n\n\n            \n                \n                    Defined in src/weather-sync/weather-sync.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    temperatureDelta\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    humidityDelta\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chancesOfRainDelta\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateWeatherSyncDelta\n                        \n                    \n                \n            \n            \n                \ncalculateWeatherSyncDelta(fromClimate: string, toClimate: string, records: WeatherSync[])\n                \n            \n\n\n            \n                \n                    Defined in src/weather-sync/weather-sync.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromClimate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toClimate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    records\n                                    \n                                            WeatherSync[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { temperatureDelta: number; humidityDelta: number; chancesOfRainDelta: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWeatherSyncDelta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherSyncDelta(weatherSyncParams: WeatherSyncDeltaParamsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/weather-sync/weather-sync.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weatherSyncParams\n                                    \n                                                WeatherSyncDeltaParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWeatherSyncRecords\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherSyncRecords(filterDto: GetWeatherSyncFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/weather-sync/weather-sync.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDto\n                                    \n                                                GetWeatherSyncFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { WeatherSync } from '@prisma/client';\n\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { GetWeatherSyncFilterDto, WeatherSyncDto } from './dto';\nimport { WeatherSyncDeltaParamsDto } from './dto';\n\n@Injectable()\nexport class WeatherSyncService {\n    constructor(private prisma: PrismaService) { }\n\n    calculateClimateChangeIndex(temperatureDelta: number, humidityDelta: number, chancesOfRainDelta: number) {\n        return (temperatureDelta * humidityDelta) / chancesOfRainDelta\n    }\n\n    calculateWeatherSyncDelta(fromClimate: string, toClimate: string, records: WeatherSync[]) {\n        let temperatureSum = [0, 0], humiditySum = [0, 0], chancesOfRainSum = [0, 0]\n\n        records.forEach(record => {\n            if (record.climate === fromClimate) {\n                temperatureSum[0] += record.temperature\n                humiditySum[0] += record.humidity\n                chancesOfRainSum[0] += record.chancesOfRain\n            } else if (record.climate === toClimate) {\n                temperatureSum[1] += record.temperature\n                humiditySum[1] += record.humidity\n                chancesOfRainSum[1] += record.chancesOfRain\n            }\n        })\n\n        return {\n            temperatureDelta: records.length ? (temperatureSum[1] - temperatureSum[0]) / records.length : 0,\n            humidityDelta: records.length ? (humiditySum[1] - humiditySum[0]) / records.length : 0,\n            chancesOfRainDelta: records.length ? (chancesOfRainSum[1] - chancesOfRainSum[0]) / records.length : 0\n        }\n    }\n\n    async add(dto: WeatherSyncDto) {\n        const weather = await this.prisma.weatherSync.create({\n            data: dto\n        })\n\n        return weather\n    }\n\n    async getWeatherSyncRecords(filterDto: GetWeatherSyncFilterDto) {\n        const { areaCode, climate, temperature, humidity, chancesOfRain } = filterDto\n        return await this.prisma.weatherSync.findMany({\n            where: {\n                areaCode,\n                climate,\n                temperature,\n                humidity,\n                chancesOfRain\n            }\n        })\n    }\n\n    async getWeatherSyncDelta(weatherSyncParams: WeatherSyncDeltaParamsDto) {\n        const { areaCode, fromClimate, toClimate } = weatherSyncParams\n        const records = await this.prisma.weatherSync.findMany({\n            where: {\n                areaCode,\n                climate: {\n                    in: [fromClimate, toClimate]\n                }\n            }\n        })\n\n        if (!records.length) {\n            throw new BadRequestException('No records found')\n        }\n\n        const { temperatureDelta, humidityDelta, chancesOfRainDelta } = this.calculateWeatherSyncDelta(fromClimate, toClimate, records)\n\n        const climateChangeIndex = this.calculateClimateChangeIndex(temperatureDelta, humidityDelta, chancesOfRainDelta)\n\n        return {\n            climateDelta: `${fromClimate} -> ${toClimate}`,\n            temperatureDelta,\n            humidityDelta,\n            chancesOfRainDelta,\n            climateChangeIndex\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/validators/is-not-equals-to.validator.ts\n            \n            function\n            IsNotEqualsTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/weather-sync/dto/get-weather-sync-delta.dto.ts\n            \n            class\n            WeatherSyncDeltaParamsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/weather-sync/dto/get-weather-sync-filter.dto.ts\n            \n            class\n            GetWeatherSyncFilterDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/weather-sync/dto/weather-sync.dto.ts\n            \n            class\n            WeatherSyncDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/weather-sync/weather-sync.controller.ts\n            \n            controller\n            WeatherSyncController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/weather-sync/weather-sync.service.ts\n            \n            injectable\n            WeatherSyncService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.3.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv-cli : ^7.3.0\n        \n            prisma : ^5.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsNotEqualsTo   (src/.../is-not-equals-to.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/validators/is-not-equals-to.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotEqualsTo\n                        \n                    \n                \n            \n            \n                \nIsNotEqualsTo(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherSyncModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_WeatherSyncModule\n\n\n\ncluster_WeatherSyncModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nWeatherSyncModule\n\nWeatherSyncModule\n\nAppModule -->\n\nWeatherSyncModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nWeatherSyncService\n\nWeatherSyncService\n\nWeatherSyncModule -->\n\nWeatherSyncService->WeatherSyncModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
